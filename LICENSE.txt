/****************************************************************************
SSA, Superpositional Structural Assignment, is a template-based algorithm for
assigning secondary structure to tetrapeptides from Protein Data Bank files
that was developed, coded, and validated by Paul Sanschagrin, Tharuna Niranjan,
and Leslie Kuhn at Michigan State University.  This software should not to be
modified, distributed, or used for profit without prior agreement from Leslie 
Kuhn, who can be contacted at the address below.

Copyright 1996, Michigan State University

Leslie Kuhn
Protein Structural Analysis and Design Laboratory
Department of Biochemistry
Michigan State University
East Lansing, MI 48824-1319

(517) 353-8745
(517) 353-9334 (fax)
kuhn@agua.bch.msu.edu (e-mail)

SSA should be attributed to the above authors and institution in any
publication or presentation deriving from its use, and a copy of such
publications should be sent to the authors.  This will not only
provide useful feedback on how the program is being used, but also
help us obtain support for future software development.  Suggestions
on SSA improvements are also welcome!


******************************************************************************/
Revision History:
  v1.0 - 6/13/96, T. Niranjan
  v2.0 - 12/5/96, P. Sanschagrin
  v3.0 - 4/17/98, V. Thakkar
******************************************************************************/



   ssa.c    Main file for the automated SSA procedure       6.13.96
templatematch.c  file for doing least squares fit, calculating RMSD
and matching with templates by thresholding the RMSD value  6.13.96
   ssa.h    Header file for the automated SSA procedure     6.13.96
   ssa.c    Modified main file to compare user templates (PCS)
							    5-Dec-96
   templatematch.c
	    Modified function to compare user templates and report
	    RMSDs (PCS)					    5-Dec-96
			*  *  *  *  *  *  * 
This program parses the sequery file by each line and opens the relevant
pdbfile (process_pdbfile function) and grabs the 3-D coordinate points 
of the back bone chain atoms and stores them in a 16 x 3 matrix. 
This matrix is then input to the template matching function (match_
with_template), which matches the sequery sequence against different 
template types by doing a least squares fit and thresholding the RMSD
values thus obtained. SSA determines the type of the sequery match and
also provides statistics of all the matches in that sequery file.

INPUT: The sequery file with fullpath name.

       The program looks for the PDB file in the directory path as set
       in the PDBHOME environment variable. Make sure you have this set
       before you run the SSA program. 
       ** Do This: setenv PDBHOME <pathname where you have the pdb files>

       The program will also ask you for the template filenames and the
       filename to save the results in. 

OUTPUT: if the  DEBUG flag is entered on the command line as an 
        optional argument, the SSA will print debug data (all the 
        calculated values) in a debug file "ssa.dbg" created in the
        working directory.

        The SSA will print the output into a file specified 
        by you in <SaveFileName>. 

	The SSA will print error messages on the standard output as
	well as into a file by name "ssa.log" in the current working
	directory. 

Makefile is provided to compile all files belonging to this module

The SSA Suite of Software Programs is coded in C language and compiled
using the C compiler cc. Typing "make" will compile all the files
in this suite. The executable will be created under the name "ssa".
			*  *  *  *  *  *  * 
RUNSCRIPT FOR SSA: runssa
	A Runscript "runssa", is provided for SSA to make it easy it to run
	several times. "runssa" takes the input file and the outout filename 
	as its arguments. If you would like to run ssa in the debug mode, 
	then type DEBUG as one of the command line arguments to runssa.

	Usage: runssa <Input Filename> <Output Filename>
	If you want to run SSA in DEBUG mode, 
	Usage: runssa DEBUG <Input Filename> <Output Filename>

The path name of the template files are hard coded to be read from the
SSA source directory. If this is not the case, then you need to
modify the runcript file runssa and type in the suitable pathnames.

Additions to SSA- Made by PCS, 5-Dec-96
---------------------------------------
* SSA will also compare a user defined template to each of the Sequery matches
  and report the RMSD and indicate if it below THRESHOLD. 

  runssa script runs as before with addition of user template option.

  runssa [DEBUG] <Input Filename> [User Template Filename] <Output Filename>
  DEBUG and User Template Filenames are optional
  User Template Filename is the filename of the PDB formatted file that must
    contain only the four residues to use as a template. It is assumed this
    will be in the current directory

  ############################################################################
   Tharuna Niranjan                         SSA Suite of Software Programs
   Kuhn Laboratory                          Protein Structural Analysis Lab
   Dept. of Biochemistry                               6.13.96
   Michigan State University
  ###############################################################################
   Additions to SSA made by:
   Paul C. Sanschagrin
   Kuhn Laboratory
   Department of Biochemistry
   Michigan State University
   East Lansing MI 48824

   5-Dec-96
  ##############################################################################


* SSA now handles new types of turns and Helices
  [- Vishal Thakkar April 17, 1998]
  Modifications made to SSA are:
  1. It scans all the turns which are classified as IRREG (Irregular) to 
     process them further.
  2. For each scan, the IRREG tetra-peptide is checked to see whether its a
     Irregular Helix or a helical end. If the residues are i to i+3, then
      a) check i-1 to i+2 residues to see if they are part of a helix
      b) check i+1 to i+4 residues to see if they are part of a helix
     If either a, or b is true, the tetra-peptide is classified as HIRR 
     (Irregular Helix). This gets counted towards the helix statistics.
  3. If above test fails, a check is made to see if distance between the 1st and 
     ther 4th residue is <= 7.0A. If so, the IRREG turn is classified as
     TIRR (Irregular Turn). And this gets counted towards the turns statistics.
  4. Else, the turn is classified as IRREG

  Also present in share/ dir is a file genbcl
  running it and providing pdbcode,chainid,startresidue, it will output to 
  stdout, InsightII BCL script which can be sourced in InsightII. This script
  will load the pdbmolecude, display on the mainchain and color the tetra-peptide
  in question

